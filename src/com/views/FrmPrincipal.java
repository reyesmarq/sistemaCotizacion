/*
* Nombre de Formulario: FrmPrincipal
 * Fecha: 13/10/2020
 * @author Diego Guevara
 * Version: 1.0
 * CopyRight: Diego Guevara
 */
package com.views;


import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
/**
 *
 * @author dguevara
 */
public class FrmPrincipal extends javax.swing.JFrame {
    
    private List listaPermisos = new ArrayList();
    
    private FrmAcercaDe acercade=null;
    private FrmCategoria categoria = null;
    private FrmPresentacion presentacion = null;
    private FrmArticulos articulo = null;
    private FrmIngreso ingreso = null;
    private FrmProveedor proveedor = null;
    private FrmVenta venta = null;
    private FrmCliente cliente = null;
    private FrmTrabajador trabajador = null;
    private FrmIngreso ingresos = null;
    private FrmCotizacion cotizacion = null;
    
    int nivel;
    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() 
    {
        initComponents();
    }

    public FrmPrincipal(List permisos)
    {
        initComponents();
        listaPermisos=permisos;
        
        //JOptionPane.showMessageDialog(null, "Prueba"+listaPermisos);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        sistemaMenu = new javax.swing.JMenu();
        acercaDeMenuItem = new javax.swing.JMenuItem();
        salirMenuItem = new javax.swing.JMenuItem();
        Almacen = new javax.swing.JMenu();
        articulosMenuItem = new javax.swing.JMenuItem();
        categoriaMenuItem = new javax.swing.JMenuItem();
        presentacionMenuItem = new javax.swing.JMenuItem();
        comprasMenu = new javax.swing.JMenu();
        ingresosMenuItem = new javax.swing.JMenuItem();
        preevodoresMenuItem = new javax.swing.JMenuItem();
        ventasMenu = new javax.swing.JMenu();
        ventasMenuItem = new javax.swing.JMenuItem();
        clientesMenuItem = new javax.swing.JMenuItem();
        cotizacionesMenu = new javax.swing.JMenu();
        mantenimientoMenu = new javax.swing.JMenu();
        empleado = new javax.swing.JMenuItem();
        consultasMenu = new javax.swing.JMenu();
        reporteArticulos = new javax.swing.JMenuItem();
        reportesCategorias = new javax.swing.JMenuItem();
        reportesPresentaciones = new javax.swing.JMenuItem();
        reportesClientes = new javax.swing.JMenuItem();
        reporteProveedores = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1041, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );

        sistemaMenu.setMnemonic('f');
        sistemaMenu.setText("Sistema");

        acercaDeMenuItem.setText("Acerca de");
        acercaDeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaDeMenuItemActionPerformed(evt);
            }
        });
        sistemaMenu.add(acercaDeMenuItem);

        salirMenuItem.setMnemonic('x');
        salirMenuItem.setText("Salir");
        salirMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirMenuItemMouseClicked(evt);
            }
        });
        salirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuItemActionPerformed(evt);
            }
        });
        sistemaMenu.add(salirMenuItem);

        menuBar.add(sistemaMenu);

        Almacen.setMnemonic('e');
        Almacen.setText("Almacen");

        articulosMenuItem.setMnemonic('t');
        articulosMenuItem.setText("Articulos");
        articulosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articulosMenuItemActionPerformed(evt);
            }
        });
        Almacen.add(articulosMenuItem);

        categoriaMenuItem.setMnemonic('y');
        categoriaMenuItem.setText("Categoria");
        categoriaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriaMenuItemActionPerformed(evt);
            }
        });
        Almacen.add(categoriaMenuItem);

        presentacionMenuItem.setMnemonic('p');
        presentacionMenuItem.setText("Presentacion");
        presentacionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentacionMenuItemActionPerformed(evt);
            }
        });
        Almacen.add(presentacionMenuItem);

        menuBar.add(Almacen);

        comprasMenu.setMnemonic('h');
        comprasMenu.setText("Compras");
        comprasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprasMenuActionPerformed(evt);
            }
        });

        ingresosMenuItem.setMnemonic('c');
        ingresosMenuItem.setText("Ingresos");
        ingresosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresosMenuItemActionPerformed(evt);
            }
        });
        comprasMenu.add(ingresosMenuItem);

        preevodoresMenuItem.setMnemonic('a');
        preevodoresMenuItem.setText("Proveedores");
        preevodoresMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preevodoresMenuItemActionPerformed(evt);
            }
        });
        comprasMenu.add(preevodoresMenuItem);

        menuBar.add(comprasMenu);

        ventasMenu.setText("Ventas");

        ventasMenuItem.setText("Ventas");
        ventasMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventasMenuItemActionPerformed(evt);
            }
        });
        ventasMenu.add(ventasMenuItem);

        clientesMenuItem.setText("Clientes");
        clientesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesMenuItemActionPerformed(evt);
            }
        });
        ventasMenu.add(clientesMenuItem);

        menuBar.add(ventasMenu);

        cotizacionesMenu.setText("Cotizaciones");
        cotizacionesMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cotizacionesMenuActionPerformed(evt);
            }
        });
        menuBar.add(cotizacionesMenu);

        mantenimientoMenu.setText("Mantenimiento");

        empleado.setText("Empleados");
        empleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empleadoActionPerformed(evt);
            }
        });
        mantenimientoMenu.add(empleado);

        menuBar.add(mantenimientoMenu);

        consultasMenu.setText("Consultas");

        reporteArticulos.setText("Stock articulos");
        reporteArticulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteArticulosActionPerformed(evt);
            }
        });
        consultasMenu.add(reporteArticulos);

        reportesCategorias.setText("Categorias");
        consultasMenu.add(reportesCategorias);

        reportesPresentaciones.setText("Presentaciones");
        consultasMenu.add(reportesPresentaciones);

        reportesClientes.setText("Clientes");
        consultasMenu.add(reportesClientes);

        reporteProveedores.setText("Proveedores");
        consultasMenu.add(reporteProveedores);

        menuBar.add(consultasMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acercaDeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaDeMenuItemActionPerformed
        try {
            if(acercade==null || acercade.isClosed()){
                acercade=new FrmAcercaDe();
                this.jDesktopPane1.add(acercade);
            }
            acercade.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_acercaDeMenuItemActionPerformed

    private void articulosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articulosMenuItemActionPerformed
        try {
            if(articulo==null || articulo.isClosed()){
                articulo=new FrmArticulos();
                this.jDesktopPane1.add(articulo);
            }
            articulo.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_articulosMenuItemActionPerformed

    private void categoriaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriaMenuItemActionPerformed
        try {
            if(categoria==null || categoria.isClosed()){
                categoria=new FrmCategoria();
                this.jDesktopPane1.add(categoria);
            }
            categoria.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_categoriaMenuItemActionPerformed

    private void presentacionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentacionMenuItemActionPerformed
        try {
            if(presentacion==null || presentacion.isClosed()){
                presentacion=new FrmPresentacion();
                this.jDesktopPane1.add(presentacion);
            }
            presentacion.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_presentacionMenuItemActionPerformed

    private void ingresosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresosMenuItemActionPerformed
        try {
            if(ingresos==null || ingresos.isClosed()){
                ingresos=new FrmIngreso();
                this.jDesktopPane1.add(ingresos);
            }
            ingresos.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ingresosMenuItemActionPerformed

    private void preevodoresMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preevodoresMenuItemActionPerformed
        try {
            if(proveedor==null || proveedor.isClosed()){
                proveedor=new FrmProveedor();
                this.jDesktopPane1.add(proveedor);
            }
            proveedor.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_preevodoresMenuItemActionPerformed

    private void comprasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprasMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comprasMenuActionPerformed

    private void ventasMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventasMenuItemActionPerformed
        try {
            if(venta==null || venta.isClosed()){
                venta=new FrmVenta();
                this.jDesktopPane1.add(venta);
            }
            venta.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ventasMenuItemActionPerformed

    private void clientesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesMenuItemActionPerformed
        try {
            if(cliente==null || cliente.isClosed()){
                cliente=new FrmCliente();
                this.jDesktopPane1.add(cliente);
            }
            cliente.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clientesMenuItemActionPerformed

    private void cotizacionesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cotizacionesMenuActionPerformed
        try {
            if(cotizacion==null || cotizacion.isClosed()){
                cotizacion=new FrmCotizacion();
                this.jDesktopPane1.add(cotizacion);
            }
            cotizacion.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cotizacionesMenuActionPerformed

    private void reporteArticulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteArticulosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reporteArticulosActionPerformed

    private void salirMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirMenuItemMouseClicked
        System.exit(0);
    }//GEN-LAST:event_salirMenuItemMouseClicked

    private void salirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirMenuItemActionPerformed

    private void empleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empleadoActionPerformed
        try {
            if(trabajador==null || trabajador.isClosed()){
                trabajador=new FrmTrabajador();
                this.jDesktopPane1.add(trabajador);
            }
            trabajador.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_empleadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Almacen;
    private javax.swing.JMenuItem acercaDeMenuItem;
    private javax.swing.JMenuItem articulosMenuItem;
    private javax.swing.JMenuItem categoriaMenuItem;
    private javax.swing.JMenuItem clientesMenuItem;
    private javax.swing.JMenu comprasMenu;
    private javax.swing.JMenu consultasMenu;
    private javax.swing.JMenu cotizacionesMenu;
    private javax.swing.JMenuItem empleado;
    private javax.swing.JMenuItem ingresosMenuItem;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu mantenimientoMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem preevodoresMenuItem;
    private javax.swing.JMenuItem presentacionMenuItem;
    private javax.swing.JMenuItem reporteArticulos;
    private javax.swing.JMenuItem reporteProveedores;
    private javax.swing.JMenuItem reportesCategorias;
    private javax.swing.JMenuItem reportesClientes;
    private javax.swing.JMenuItem reportesPresentaciones;
    private javax.swing.JMenuItem salirMenuItem;
    private javax.swing.JMenu sistemaMenu;
    private javax.swing.JMenu ventasMenu;
    private javax.swing.JMenuItem ventasMenuItem;
    // End of variables declaration//GEN-END:variables
}
